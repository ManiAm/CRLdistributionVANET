//
// Generated file, do not edit! Created by opp_msgc 4.3 from msg/SimpleMsg.msg.
//

#ifndef _SIMPLEMSG_M_H_
#define _SIMPLEMSG_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>msg/SimpleMsg.msg</tt> by opp_msgc.
 * <pre>
 * packet SimpleMsg
 * {
 *     string payload;
 *     string signature;
 *     double certLTfrom;
 *     double certLTto;
 * }
 * </pre>
 */
class SimpleMsg : public ::cPacket
{
  protected:
    opp_string payload_var;
    opp_string signature_var;
    double certLTfrom_var;
    double certLTto_var;

  private:
    void copy(const SimpleMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SimpleMsg&);

  public:
    SimpleMsg(const char *name=NULL, int kind=0);
    SimpleMsg(const SimpleMsg& other);
    virtual ~SimpleMsg();
    SimpleMsg& operator=(const SimpleMsg& other);
    virtual SimpleMsg *dup() const {return new SimpleMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getPayload() const;
    virtual void setPayload(const char * payload);
    virtual const char * getSignature() const;
    virtual void setSignature(const char * signature);
    virtual double getCertLTfrom() const;
    virtual void setCertLTfrom(double certLTfrom);
    virtual double getCertLTto() const;
    virtual void setCertLTto(double certLTto);
};

inline void doPacking(cCommBuffer *b, SimpleMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SimpleMsg& obj) {obj.parsimUnpack(b);}


#endif // _SIMPLEMSG_M_H_
