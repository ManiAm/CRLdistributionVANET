//
// Generated file, do not edit! Created by opp_msgc 4.3 from msg/Beacon.msg.
//

#ifndef _BEACON_M_H_
#define _BEACON_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>msg/Beacon.msg</tt> by opp_msgc.
 * <pre>
 * packet Beacon
 * {
 *     int destAddr = -1;   
 *     int srcAddr = -1;    
 *     string NodeName;
 * 	double positionX;
 * 	double positionY;
 * 	double speed;
 * 	
 * 	bool NeedCRL;	
 * 	int CRL_Piece_No;
 * 	int rangeS;
 * 	int rangeE;
 *     int CRLchannel;
 * }
 * </pre>
 */
class Beacon : public ::cPacket
{
  protected:
    int destAddr_var;
    int srcAddr_var;
    opp_string NodeName_var;
    double positionX_var;
    double positionY_var;
    double speed_var;
    bool NeedCRL_var;
    int CRL_Piece_No_var;
    int rangeS_var;
    int rangeE_var;
    int CRLchannel_var;

  private:
    void copy(const Beacon& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Beacon&);

  public:
    Beacon(const char *name=NULL, int kind=0);
    Beacon(const Beacon& other);
    virtual ~Beacon();
    Beacon& operator=(const Beacon& other);
    virtual Beacon *dup() const {return new Beacon(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getDestAddr() const;
    virtual void setDestAddr(int destAddr);
    virtual int getSrcAddr() const;
    virtual void setSrcAddr(int srcAddr);
    virtual const char * getNodeName() const;
    virtual void setNodeName(const char * NodeName);
    virtual double getPositionX() const;
    virtual void setPositionX(double positionX);
    virtual double getPositionY() const;
    virtual void setPositionY(double positionY);
    virtual double getSpeed() const;
    virtual void setSpeed(double speed);
    virtual bool getNeedCRL() const;
    virtual void setNeedCRL(bool NeedCRL);
    virtual int getCRL_Piece_No() const;
    virtual void setCRL_Piece_No(int CRL_Piece_No);
    virtual int getRangeS() const;
    virtual void setRangeS(int rangeS);
    virtual int getRangeE() const;
    virtual void setRangeE(int rangeE);
    virtual int getCRLchannel() const;
    virtual void setCRLchannel(int CRLchannel);
};

inline void doPacking(cCommBuffer *b, Beacon& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Beacon& obj) {obj.parsimUnpack(b);}


#endif // _BEACON_M_H_
